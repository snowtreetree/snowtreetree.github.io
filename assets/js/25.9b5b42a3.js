(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{371:function(t,s,a){"use strict";a.r(s);var r=a(43),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ssl-tls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssl-tls"}},[t._v("#")]),t._v(" SSL/TLS")]),t._v(" "),a("p",[t._v("HTTPS是HTTP建立在SSL/TLS安全协议上的。通过SSL证书验证服务的身份，并为浏览器和服务器之间的通信进行加密。采用对称加密、非对称加密、身份认证等技术进行混合加密进行传输。属于OSI中的第五层（安全层），默认端口是443。与普通的发送HTTP请求相比，多了一个握手的过程，HTTPS需要在TCP上建立安全链接之后，才能收发HTTP报文。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("SSL（Secure Sockets Layer）：安全套接字层，TLS（Transport Layer Security）：传输安全层，前身是SSL。")]),t._v(" "),a("p",[t._v("通信安全需要同时具备机密性（不被窃听）、不可否认、完整性、身份认证（证明自己）")])]),t._v(" "),a("h2",{attrs:{id:"tls-组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tls-组成"}},[t._v("#")]),t._v(" TLS 组成")]),t._v(" "),a("p",[t._v("TLS包含了几个子协议，每个子协议各自负责不同的模块。")]),t._v(" "),a("h3",{attrs:{id:"记录协议（？）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#记录协议（？）"}},[t._v("#")]),t._v(" 记录协议（？）")]),t._v(" "),a("p",[t._v("规定了TLS收发数据的基本单位：记录（record）。所有其他的协议都需要通过记录协议发出。")]),t._v(" "),a("h3",{attrs:{id:"警报协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#警报协议"}},[t._v("#")]),t._v(" 警报协议")]),t._v(" "),a("p",[t._v("向对方发出警报信息。比如protocol_version是对版本的限制，bad_certificate是证书有问题，收到的一方可以选择继续或终止。")]),t._v(" "),a("h3",{attrs:{id:"握手协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#握手协议"}},[t._v("#")]),t._v(" 握手协议")]),t._v(" "),a("p",[t._v("协商TLS版本号，随机数，密码套件（建立连接时的加密算法组合）等信息，然后交换证书和秘钥参数，最终双方协商得到会话秘钥，用于后续的混合加密系统。")]),t._v(" "),a("h3",{attrs:{id:"变更密码规范协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变更密码规范协议"}},[t._v("#")]),t._v(" 变更密码规范协议")]),t._v(" "),a("p",[t._v("告诉对方，后续数据都用加密保护。")]),t._v(" "),a("h2",{attrs:{id:"握手流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#握手流程"}},[t._v("#")]),t._v(" 握手流程")]),t._v(" "),a("p",[t._v("1、客户端通过URL访问服务器建立SSL/TLS连接，将协议版本号，生成一个随机数（client_random），以及支持的加密方法发送到服务器")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Handshake Protocol"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Client Hello\n    Version"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TLS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x0303")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    Random"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("cbf803321fd2623408dfe…\n    Cipher "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Suites")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(" suites"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        Cipher Suite"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xc02f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        Cipher Suite"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xc030")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("2、服务端收到请求，确认加密算法，并生成一个serve_random，以及网站支持的证书（包含公钥等信息）发送到客户端")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Handshake Protocol"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Server Hello\n    Version"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TLS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x0303")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    Random"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0e6320")]),t._v("f21bae50842e96…\n    Cipher Suite"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xc030")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),a("p",[t._v("3、客户端收到证书后进行，得到服务端的信息及公钥，协商安全等级（信息加密的等级）。"),a("br"),t._v("\n4、验证成功后，生成一个新的随机数Premaster_secret，经过公钥加密后，发给服务器\n5、服务器收到Premaster_secret后，私钥解密\n6、后面根据约定好的加密算法，使用client_random、serve_random、Premaster_secret生成对话秘钥，进行整个对话")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("对信息的加密保证了"),a("code",[t._v("机密性")]),t._v("。")]),t._v(" "),a("p",[t._v("对称加密：加解密的秘钥相同。常见有的AES，ChaCha20。")]),t._v(" "),a("p",[t._v("非对称加密：分为公钥（public key）和私钥（private），两个秘钥不同，公钥可以公开，但是私钥必须要个保密。公钥和私钥具有单向性，经过公钥加密的内容，只能通过私钥解密，通过私钥加密的内容，只能通过公钥解密。常见的有DSA、RSA、ECC。")]),t._v(" "),a("p",[t._v("混合加密：在通信开始的时候，使用非对称加密，解决秘钥交换的问题。对称加密的"),a("code",[t._v("会话秘钥")]),t._v("，经过公钥/私钥加密后，发送给对方，对方拿到后就用私钥/公钥解密，取出对称加密的"),a("code",[t._v("会话秘钥")]),t._v("。")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("摘要算法保证数据的"),a("code",[t._v("完整性")]),t._v("。")]),t._v(" "),a("p",[t._v("常用的算法有MD5和SHA-2（SHA224、SHA256、SHA384等），内容经过加密算法生成摘要信息，然后使用"),a("code",[t._v("会话秘钥")]),t._v("对消息和摘要进行加密。")])]),t._v(" "),a("h2",{attrs:{id:"优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优缺点"}},[t._v("#")]),t._v(" 优缺点")]),t._v(" "),a("h3",{attrs:{id:"http中存在问题（https解决的问题）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http中存在问题（https解决的问题）"}},[t._v("#")]),t._v(" HTTP中存在问题（HTTPS解决的问题）")]),t._v(" "),a("ul",[a("li",[t._v("请求明文，容易被截取窃听")]),t._v(" "),a("li",[t._v("数据完整性未校验，容易被篡改")]),t._v(" "),a("li",[t._v("没有验证对方身份，存在冒充风险")])]),t._v(" "),a("h3",{attrs:{id:"https的缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#https的缺点"}},[t._v("#")]),t._v(" HTTPS的缺点")]),t._v(" "),a("ul",[a("li",[t._v("多次握手，耗时")]),t._v(" "),a("li",[t._v("SSL证书需要花钱")]),t._v(" "),a("li",[t._v("涉及的安全算法消耗CPU资源")])]),t._v(" "),a("h2",{attrs:{id:"数字签名和证书（？）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数字签名和证书（？）"}},[t._v("#")]),t._v(" 数字签名和证书（？）")]),t._v(" "),a("h3",{attrs:{id:"摘要算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#摘要算法"}},[t._v("#")]),t._v(" 摘要算法")]),t._v(" "),a("p",[t._v("用来保证数据的完整性。通过MD5、SHA-2等算法，对信息进行加密，然后跟着原文发送到服务器，服务器使用相同的算法，对原文进行摘要计算，判断得到的信息是否和传输过来的摘要信息一致，从而判断消息是否被修改过。")]),t._v(" "),a("h3",{attrs:{id:"数字签名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数字签名"}},[t._v("#")]),t._v(" 数字签名")]),t._v(" "),a("p",[t._v("原理：使用私钥进行加密，公钥进行解密。由于非对称加密的效率较低，所以私钥只加密摘要信息。签名和公钥完全公开，但是经过私钥加密的，只能通过对应的公钥进行解密。通过公钥解密后，再与原文进行对比验证完整性，就可以确定消息确实是正确的。\nCA（Certificate Authority ，证书认证机构），对网站的公钥签名，保证公钥的可信性。")]),t._v(" "),a("h3",{attrs:{id:"tls-兼容（？）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tls-兼容（？）"}},[t._v("#")]),t._v(" TLS 兼容（？）")]),t._v(" "),a("h3",{attrs:{id:"优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优化"}},[t._v("#")]),t._v(" 优化")]),t._v(" "),a("p",[t._v("握手的过程比较耗时。")]),t._v(" "),a("ul",[a("li",[t._v("使用TLS1.3，简化了握手过程，完全握手只需要1-RTT")]),t._v(" "),a("li",[t._v("证书优化 证书传输和认证")]),t._v(" "),a("li",[t._v("会话复用 客户端和服务器，各自保存第一次的会话ID，客户端再次发送请求的时候，将第一次的会话ID带上。")]),t._v(" "),a("li",[t._v("会话票证 客户端保存一个票证信息session_ticket，会话的时候，服务器验证是否过期。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);