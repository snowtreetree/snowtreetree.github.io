(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{370:function(t,e,r){"use strict";r.r(e);var a=r(42),o=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"docker"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[t._v("#")]),t._v(" Docker")]),t._v(" "),r("p",[t._v("开源的应用容器引擎。将应用以及相关依赖打包到一个轻量级、可移植的容器中，然后发布到任何流行的Linux机器上，实现虚拟化。")]),t._v(" "),r("p",[t._v("类似于虚拟机，但是Docker不是在宿主机器上虚拟出一套硬件，而是让Docker容器里面的进程直接运行在宿主机器上（Docker会做文件、网络的隔离），因此Docker的体积会更小。")]),t._v(" "),r("h2",{attrs:{id:"架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#架构"}},[t._v("#")]),t._v(" 架构")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("Image（镜像） 相当于root文件系统。把应用程序及其依赖，打包到image文件里。只有通过这个文件，才能够生成 容器，image可以看做是容器的模板。")])]),t._v(" "),r("li",[r("p",[t._v("Container（容器） 镜像运行时的实体。容器可以被创建、启动、停止、重启等。")])]),t._v(" "),r("li",[r("p",[t._v("Repository（仓库） 保存镜像，可以看做代码控制中心。")])])])])}),[],!1,null,null,null);e.default=o.exports}}]);